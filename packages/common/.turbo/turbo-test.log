[33mcommon:test[0m: cache hit, replaying output [2m7d1ea7d2c5062d2b[0m
[33mcommon:test: [0m$ jest --passWithNoTests
[33mcommon:test: [0mPASS src/helpers/flatten/flatten.test.ts
[33mcommon:test: [0m  ‚óè Console
[33mcommon:test: [0m
[33mcommon:test: [0m    console.log
[33mcommon:test: [0m      { a: 1, c: 2, d: 3 }
[33mcommon:test: [0m
[33mcommon:test: [0m      at Object.<anonymous> (src/helpers/flatten/flatten.test.ts:21:11)
[33mcommon:test: [0m
[33mcommon:test: [0m    console.log
[33mcommon:test: [0m      { a: 1, c: 2, d: 3 }
[33mcommon:test: [0m
[33mcommon:test: [0m      at Object.<anonymous> (src/helpers/flatten/flatten.test.ts:22:11)
[33mcommon:test: [0m
[33mcommon:test: [0mPASS src/math/average/average.test.ts
[33mcommon:test: [0mPASS src/helpers/array.test.ts
[33mcommon:test: [0mPASS src/math/percentageDifference.test.ts
[33mcommon:test: [0mPASS src/math/percentageChange.test.ts
[33mcommon:test: [0mFAIL src/finance/helpers/currency.test.ts
[33mcommon:test: [0m  ‚óè getConversionRate ‚Ä∫ should return the correct conversion rate
[33mcommon:test: [0m
[33mcommon:test: [0m    expect(received).toEqual(expected) // deep equality
[33mcommon:test: [0m
[33mcommon:test: [0m    Expected: "0.80"
[33mcommon:test: [0m    Received: "0"
[33mcommon:test: [0m
[33mcommon:test: [0m      14 | 		const result = getConversionRate(rates, fromCurrency, toCurrency).value
[33mcommon:test: [0m      15 |
[33mcommon:test: [0m    > 16 | 		expect(result).toEqual(expected)
[33mcommon:test: [0m         | 		               ^
[33mcommon:test: [0m      17 | 	})
[33mcommon:test: [0m      18 |
[33mcommon:test: [0m      19 | 	it("should return an error if the from currency is invalid", () => {
[33mcommon:test: [0m
[33mcommon:test: [0m      at Object.<anonymous> (src/finance/helpers/currency.test.ts:16:18)
[33mcommon:test: [0m
[33mcommon:test: [0m  ‚óè getConversionRate ‚Ä∫ should return an error if the to currency is invalid
[33mcommon:test: [0m
[33mcommon:test: [0m    expect(received).toEqual(expected) // deep equality
[33mcommon:test: [0m
[33mcommon:test: [0m    - Expected  - 1
[33mcommon:test: [0m    + Received  + 1
[33mcommon:test: [0m
[33mcommon:test: [0m      Object {
[33mcommon:test: [0m    -   "error": "Invalid to currency: INVALID",
[33mcommon:test: [0m    +   "error": "Invalid from currency: USD",
[33mcommon:test: [0m        "value": "0",
[33mcommon:test: [0m      }
[33mcommon:test: [0m
[33mcommon:test: [0m      44 | 		const result = getConversionRate(rates, fromCurrency, toCurrency)
[33mcommon:test: [0m      45 |
[33mcommon:test: [0m    > 46 | 		expect(result).toEqual(expected)
[33mcommon:test: [0m         | 		               ^
[33mcommon:test: [0m      47 | 	})
[33mcommon:test: [0m      48 | })
[33mcommon:test: [0m      49 |
[33mcommon:test: [0m
[33mcommon:test: [0m      at Object.<anonymous> (src/finance/helpers/currency.test.ts:46:18)
[33mcommon:test: [0m
[33mcommon:test: [0m  ‚óè convertCurrency ‚Ä∫ should convert the currency correctly
[33mcommon:test: [0m
[33mcommon:test: [0m    expect(received).toEqual(expected) // deep equality
[33mcommon:test: [0m
[33mcommon:test: [0m    Expected: "80.00"
[33mcommon:test: [0m    Received: "0.00"
[33mcommon:test: [0m
[33mcommon:test: [0m      69 | 		}).toString()
[33mcommon:test: [0m      70 |
[33mcommon:test: [0m    > 71 | 		expect(result).toEqual(expected)
[33mcommon:test: [0m         | 		               ^
[33mcommon:test: [0m      72 | 	})
[33mcommon:test: [0m      73 |
[33mcommon:test: [0m      74 | 	it("should return 0 if the amount is 0", () => {
[33mcommon:test: [0m
[33mcommon:test: [0m      at Object.<anonymous> (src/finance/helpers/currency.test.ts:71:18)
[33mcommon:test: [0m
[33mcommon:test: [0m  ‚óè convertCurrency ‚Ä∫ should return the same amount if the currencies are the same
[33mcommon:test: [0m
[33mcommon:test: [0m    expect(received).toEqual(expected) // deep equality
[33mcommon:test: [0m
[33mcommon:test: [0m    Expected: "100.00"
[33mcommon:test: [0m    Received: "0.00"
[33mcommon:test: [0m
[33mcommon:test: [0m      111 | 		}).toString()
[33mcommon:test: [0m      112 |
[33mcommon:test: [0m    > 113 | 		expect(result).toEqual(expected)
[33mcommon:test: [0m          | 		               ^
[33mcommon:test: [0m      114 | 	})
[33mcommon:test: [0m      115 | })
[33mcommon:test: [0m      116 |
[33mcommon:test: [0m
[33mcommon:test: [0m      at Object.<anonymous> (src/finance/helpers/currency.test.ts:113:18)
[33mcommon:test: [0m
[33mcommon:test: [0mPASS src/finance/helpers/futureValueWithPeriodicCompounding/index.test.ts
[33mcommon:test: [0mPASS src/finance/helpers/burnRate/calculateNumDaysInPeriod.test.ts
[33mcommon:test: [0mPASS src/finance/helpers/burnRate/burnRate.test.ts
[33mcommon:test: [0m  ‚óè Console
[33mcommon:test: [0m
[33mcommon:test: [0m    console.log
[33mcommon:test: [0m      [
[33mcommon:test: [0m        { date: 2022-01-01T00:00:00.000Z, value: 30 },
[33mcommon:test: [0m        { date: 2022-01-02T00:00:00.000Z, value: 20 },
[33mcommon:test: [0m        { date: 2022-01-03T00:00:00.000Z, value: 10 }
[33mcommon:test: [0m      ]
[33mcommon:test: [0m
[33mcommon:test: [0m      at Object.<anonymous> (src/finance/helpers/burnRate/burnRate.test.ts:38:11)
[33mcommon:test: [0m
[33mcommon:test: [0mts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /Users/harrisfauntleroy/Documents/code/personal/elixir.money-monorepo/packages/database/dist/index.js). To fix this:
[33mcommon:test: [0m  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
[33mcommon:test: [0m  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
[33mcommon:test: [0mts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /Users/harrisfauntleroy/Documents/code/personal/elixir.money-monorepo/packages/database/generated/prisma-client/index.js). To fix this:
[33mcommon:test: [0m  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
[33mcommon:test: [0m  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
[33mcommon:test: [0mts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /Users/harrisfauntleroy/Documents/code/personal/elixir.money-monorepo/packages/database/generated/prisma-client/runtime/index.js). To fix this:
[33mcommon:test: [0m  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
[33mcommon:test: [0m  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
[33mcommon:test: [0mPASS src/finance/cryptocurrency/helpers/index.test.ts (5.221 s)
[33mcommon:test: [0m
[33mcommon:test: [0mTest Suites: 1 failed, 9 passed, 10 total
[33mcommon:test: [0mTests:       4 failed, 1 todo, 20 passed, 25 total
[33mcommon:test: [0mSnapshots:   0 total
[33mcommon:test: [0mTime:        5.44 s
[33mcommon:test: [0mRan all test suites.
[33mcommon:test: [0merror Command failed with exit code 1.
[33mcommon:test: [0minfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
