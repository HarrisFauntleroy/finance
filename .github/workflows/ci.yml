name: CI Actions 🚀🤖

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

concurrency:
  group:
    ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  continuous-integration:
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code at the beginning of the workflow
      - name: 🛎️ Check out code 🛎️
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Setup Node.js environment for the workflow
      - name: 📦 Setup Node.js environment 📦
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
        # Could consider supporting multiple Node.js versions using matrix strategy

        # Cache Next.js build and node modules
      - name: 🚀 Cache Next.js build and node modules 🚀
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key:
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{
            hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Install the project dependencies
      - name: 🧶 Install dependencies 🧶
        run: yarn

      # Build the monorepo
      - name: 🏗️ Build monorepo 🏗️
        run: yarn build

      # Lint the codebase to ensure code quality
      - name: 🧹 Lint monorepo 🧹
        run: yarn lint

      # Run tests and generate a coverage report
      - name: 🧪 Test and report 🧪📊
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          test-script: "yarn test:ci"

      # Run database migrations
      - name: 🗄️ Run Prisma migration 🗄️
        run: yarn db:migrate:deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # Optional: Publish UI package to NPM (uncomment if needed)
      # - name: 📦 Publish UI package to NPM 📦
      #   uses: JS-DevTools/npm-publish@v2
      #   with:
      #     package: ../../packages/ui
      #     token: ${{ secrets.NPM_TOKEN }}

      # ✨ Consider adding additional steps such as:
      # - Deploying the code to a staging environment
      # - Running end-to-end tests
      # - Generating and publishing documentation
